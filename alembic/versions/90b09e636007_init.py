"""init

Revision ID: 90b09e636007
Revises: 
Create Date: 2019-03-12 15:25:34.376996

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '90b09e636007'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clouds',
                    sa.Column('_created', sa.DateTime(), nullable=True),
                    sa.Column('_updated', sa.DateTime(), nullable=True),
                    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'),
                              nullable=False),
                    sa.Column('path_to_file', sa.String(length=1024), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('users',
                    sa.Column('_created', sa.DateTime(), nullable=True),
                    sa.Column('_updated', sa.DateTime(), nullable=True),
                    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'),
                              nullable=False),
                    sa.Column('username', sa.String(length=255), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('username')
                    )
    op.create_table('users_clouds',
                    sa.Column('_created', sa.DateTime(), nullable=True),
                    sa.Column('_updated', sa.DateTime(), nullable=True),
                    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'),
                              nullable=False),
                    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('cloud_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('has_cloud', sa.Boolean(), nullable=True),
                    sa.ForeignKeyConstraint(['cloud_id'], ['clouds.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_clouds')
    op.drop_table('users')
    op.drop_table('clouds')
    # ### end Alembic commands ###
